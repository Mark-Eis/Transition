% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{Transitions}
\alias{Transitions}
\alias{add_transitions}
\alias{get_transitions}
\title{Identify Temporal Transitions in Longitudinal Study Data}
\usage{
add_transitions(
  object,
  subject = "subject",
  timepoint = "timepoint",
  result = "result",
  transition = "transition",
  method = 1L
)

get_transitions(
  object,
  subject = "subject",
  timepoint = "timepoint",
  result = "result",
  method = 1L
)
}
\arguments{
\item{object}{a \code{\link{data.frame}} (or object coercible by \code{\link{as.data.frame}()} to
a data frame) containing the data to be analysed.}

\item{subject}{\code{\link{character}}, name of the column (of type \code{\link{integer}} or
\code{\link{factor}}) identifying individual study subjects; default \code{"subject"}.}

\item{timepoint}{\code{character}, name of the column recording time points (as \code{\link{Dates}})
of testing of subjects; default \code{"timepoint"}.}

\item{result}{\code{character}, name of the column (of type \code{\link[base:factor]{ordered factor}})
recording test results; default \code{"result"}.}

\item{transition}{\code{character}, name to be used for a new column (of type
\code{\link{integer}}) to record transitions; default \code{"transition"}.}

\item{method}{\code{\link{integer}}, \code{1L}, \code{2L}, ... \code{5L}, specifying the method
required for calculating transitions; default \code{1L}.}
}
\value{
\item{\code{add_transitions()}}{A \code{\link{data.frame}} based on \code{object}, with an added
   column of type \code{\link{integer}} containing the values of the test result transitions.}

\item{\code{get_transitions()}}{An \code{\link[base:vector]{integer vector}} of length
   \code{\link{nrow}(object)}, containing the values of the test result transitions ordered in the exact
   sequence of the \code{subject} and \code{timepoint} in \code{object}.}
}
\description{
\code{get_transitions()} identifies temporal transitions in test results for individual
subjects in a longitudinal study.

\code{add_transitions()} interpolates these transitions into a data frame for further analysis.
}
\details{
The data can be presented in any order e.g., ordered by \code{subject}, by \code{timepoint},
forwards or backwards in time, or entirely at random, and may have unbalanced designs with different
time points or numbers of test results per subject. However, the \emph{user} is responsible for
ensuring the data contain unique combinations of \code{subject}, \code{timepoint} and \code{result};
if not, outputs will be undefined.

Time points should be formatted as \code{\link{Dates}} and included in data frame \code{object} in
the column named as specified by argument \code{timepoint} (see \emph{Note}).

Test results should be semi-quantitiative, formatted as \code{\link[base:ordered]{ordered factor}}
and included in data frame \code{object} in the column named as specified by argument \code{result}
(see \emph{Note}).

Temporal transitions in the test \code{results} for each \code{subject} within the \code{object}
\code{\link{data.frame}} are characterised using one of various methods choosen using option
\code{method}.
}
\note{
Time points represented by \code{\link{integer}} or \code{\link{numeric}} values can be converted to R
  \code{Dates} conveniently using \code{\link{as.Date}()}. If only the year is available, an arbitrary
  value may be used consistently for month and day e.g., the 1st of January; likewise, the 1st day of the
  month could be used if only the year and month are available (see \emph{examples}).

Quantitive results available as \code{\link{numeric}} data can be converted to a semi-quantitative
  \code{\link[base:factor]{ordered factor}} conveniently using \code{\link{cut}()}.
}
\examples{

  # Inspect Blackmore data frame using {base} str()
Blackmore |> str()
  # {base} hist() gives insights into "exercise" column, useful for {base} cut() below
hist(Blackmore$exercise, include.lowest = TRUE, plot = FALSE)[1:2]
  # Convert "age" to dates for timepoint argument, using arbitrary "origin" 1-Jan-2000,
  # and convert exercise to ordered factor "result" using cut()
Blackmore <- transform(Blackmore,
    timepoint = as.Date("2000-01-01") + round(age * 365.25),
    result = cut(
        exercise,
        breaks = seq(0, 30, 2),
        labels = paste0("<=", seq(0, 30, 2)[-1]),
        include.lowest = TRUE,
        ordered_result = TRUE
    )
)
  # subject, timepoint and result arguments now as defaults and required types
Blackmore |> str()
  # Integer vector of test result transitions (default method 1)
get_transitions(Blackmore)
  # Add column of test result transitions to data frame
add_transitions(Blackmore) |> head(32)
  # Method 4, showing transitions as either positive (1) or negative (-1)
add_transitions(Blackmore, method = 4) |> head(10)

rm(Blackmore)

## Formatting numeric values as R dates

#  Data frame containing year as numeric: 2018 to 2025
(df <- data.frame(
    subject = rep(1001:1002, 4),
    timepoint = 2018:2025
    ))

#  Convert to R dates
(df <- transform(df, timepoint = as.Date(paste(timepoint, "01", "01", sep = "-"))))

# Format R dates to show just the year
(df <- transform(df, year = format(timepoint, "\%Y")))

#  Data frame containing year and month as numeric: July 2024 to June 2025
(df <- data.frame(
           subject = rep(1001:1002, 6),
           year = rep(2024:2025, each = 6),
           month = c(7:12, 1:6)
       ))

#  Convert to R dates
df <- transform(df, timepoint = as.Date(paste(year, month, "01", sep = "-")))
\dontshow{
    df$year <- NULL
    df$month <- NULL
}
df

# Format R dates to show just the month and year
(df <- transform(df, month_year = format(timepoint, "\%b-\%Y")))

rm(df)

}
\seealso{
\code{\link{data.frame}}, \code{\link{Dates}}, and \code{\link[base:factor]{ordered factor}}.

Other transitions: 
\code{\link{PreviousDate}},
\code{\link{PreviousResult}},
\code{\link{uniques}()}
}
\concept{transitions}
